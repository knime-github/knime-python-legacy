<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./pythonview.png" type="Visualizer">
	<name>Python View</name>

	<shortDescription>
		Allows execution of a Python script in a local Python
		installation.
	</shortDescription>

	<fullDescription>
		<intro>
			Allows execution of a Python script in a local Python
			installation.
			The path to the Python executable has to be configured
			in Preferences
			→ KNIME → Python.
		</intro>
		<tab name="Script">
			<option name="Editor">
				The script that will be executed to generate this nodes output.
				Execute
				script will execute the full script while execute selection
				will only
				execute the currently selected script.
				<br />
				<br />
				The editor can optionally provide autocomplete suggestions if the
				Python
				module jedi is installed.
			</option>
			<option name="Columns">
				The list contains the columns available in the
				input table. A double click will insert the corresponding identifier
				at the current cursor position in the editor.
			</option>
			<option name="Flow variables">
				The list contains the available flow variables. A
				double click will insert the corresponding identifier
				at the current
				cursor position in the editor.
			</option>
			<option name="Workspace">
				Lists the currently defined identifiers in the
				running Python instance. Reset workspace will remove all definitions
				and reinsert only the input data. Show image shows the output image.
			</option>
			<option name="Console">
				Displays the standard and error output of the
				execution as well as other relevant information.
			</option>
		</tab>
		<tab name="Options">
			<option name="Row limit (dialog)">
				Limits how many rows are loaded in the dialog.
				Changes only take effect after reseting the workspace.
			</option>
		</tab>
	</fullDescription>

	<ports>
		<inPort name="Table" index="0">
			The input table. In the Python script
			it is available as
			pandas.DataFrame under the name
			<b>input_table</b>
			.
		</inPort>
		<outPort name="Image" index="0">
			The output image. This is the content of the
			variable
			<b>output_image</b>
			which has to be defined and has to be a string containing either an SVG or a byte array
			representing a PNG or JPG image. Otherwise this node will not successfully
			execute.
		</outPort>
	</ports>
</knimeNode>
