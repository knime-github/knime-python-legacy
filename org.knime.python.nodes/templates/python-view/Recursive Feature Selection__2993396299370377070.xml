<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="Recursive Feature Selection__2993396299370377070.xml">
<entry key="category" type="xstring" value="Data Mining"/>
<entry key="title" type="xstring" value="Recursive Feature Selection"/>
<entry key="description" type="xstring" value="Create a plot of feature rank and after a recursive feature elimination. Adapted from:%%00010http://scikit-learn.org/stable/auto_examples/plot_rfe_with_cross_validation.html#example-plot-rfe-with-cross-validation-py"/>
<entry key="sourcecode" type="xstring" value="import matplotlib%%00010import matplotlib.pyplot as plt%%00010from StringIO import StringIO%%00010from sklearn.svm import SVC%%00010from sklearn.cross_validation import StratifiedKFold%%00010from sklearn.feature_selection import RFECV%%00010from StringIO import StringIO%%00010%%00010# Choose features%%00010features = input_table.iloc[:,0:10]%%00010%%00010# Choose class labels%%00010labels = input_table['Cluster Membership']%%00010%%00010# Create a classifier for feature elimination.%%00010svc = SVC(kernel=&quot;linear&quot;)%%00010%%00010# Create a recursive feature eliminator and execute it.%%00010rfecv = RFECV(estimator=svc, step=1, cv=StratifiedKFold(labels, 3), scoring='accuracy')%%00010rfecv.fit(features, labels)%%00010%%00010# Plot number of features VS. cross-validation scores%%00010matplotlib.use('SVG')%%00010plt.figure()%%00010plt.xlabel(&quot;Number of features selected&quot;)%%00010plt.ylabel(&quot;Cross validation score (nb of correct classifications)&quot;)%%00010plt.plot(range(1, len(rfecv.grid_scores_) + 1), rfecv.grid_scores_)%%00010%%00010# Save plot as svg string%%00010buffer = StringIO()%%00010plt.savefig(buffer, format='svg')%%00010output_image = buffer.getvalue()%%00010%%00010%%00010"/>
</config>
