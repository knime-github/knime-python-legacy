# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sql.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sql.proto',
  package='knime',
  serialized_pb=_b('\n\tsql.proto\x12\x05knime\"\x8f\x01\n\x03SQL\x12\x0e\n\x06\x64river\x18\x01 \x02(\t\x12\x0f\n\x07JDBCUrl\x18\x02 \x02(\t\x12\x10\n\x08userName\x18\x03 \x02(\t\x12\x10\n\x08password\x18\x04 \x02(\t\x12\r\n\x05query\x18\x05 \x02(\t\x12\x14\n\x0c\x64\x62Identifier\x18\x06 \x02(\t\x12\x10\n\x08timezone\x18\x07 \x01(\t\x12\x0c\n\x04jars\x18\x08 \x03(\tB1\n\x1dorg.knime.python.kernel.protoB\x10ProtobufKnimeSQL')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SQL = _descriptor.Descriptor(
  name='SQL',
  full_name='knime.SQL',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='driver', full_name='knime.SQL.driver', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='JDBCUrl', full_name='knime.SQL.JDBCUrl', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='userName', full_name='knime.SQL.userName', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='knime.SQL.password', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query', full_name='knime.SQL.query', index=4,
      number=5, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dbIdentifier', full_name='knime.SQL.dbIdentifier', index=5,
      number=6, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timezone', full_name='knime.SQL.timezone', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='jars', full_name='knime.SQL.jars', index=7,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=164,
)

DESCRIPTOR.message_types_by_name['SQL'] = _SQL

SQL = _reflection.GeneratedProtocolMessageType('SQL', (_message.Message,), dict(
  DESCRIPTOR = _SQL,
  __module__ = 'sql_pb2'
  # @@protoc_insertion_point(class_scope:knime.SQL)
  ))
_sym_db.RegisterMessage(SQL)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\035org.knime.python.kernel.protoB\020ProtobufKnimeSQL'))
# @@protoc_insertion_point(module_scope)
