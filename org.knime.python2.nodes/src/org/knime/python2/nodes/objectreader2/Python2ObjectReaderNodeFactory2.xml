<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./pythonobjectreader.png" type="Source">
   <name>Python Object Reader</name>

   <shortDescription>
      Allows executing a Python script in a local Python environment.
   </shortDescription>

   <fullDescription>
		<intro>
			Allows executing a Python script in a local Python
			environment. The environment has to be configured
			under <i>File → Preferences → KNIME → Python</i> or via flow variable, as described in the
			<a href="https://docs.knime.com/latest/python_installation_guide/">
			KNIME Python Integration Installation Guide</a>.
			<br/>
			This node supports Python 2 and 3.
			It also allows to import Jupyter notebooks as Python modules via the
			<a href="https://docs.knime.com/latest/python_installation_guide/#_load_jupyter_notebooks_from_knime">
			knime_jupyter</a> module that is available in the node's Python workspace.
		</intro>
      <tab name="Script">
         <option name="Editor">
            The script in the editor panel in the center will be
            executed to
            generate this node's output.
            "Execute script" will
            execute the full
            script while "Execute
            selected lines"
            will
            only execute the currently
            selected part of the
            script.
            <br />
            The editor optionally provides autocompletion (CTRL + Space)
            if the
            Python module
            <b>jedi</b>
            is installed.
         </option>
         <option name="Flow variables">
            The pane on the left side of the editor
            panel
            lists the available flow variables. A
            double click on a
            flow variable
            will insert the corresponding identifier at the
            current
            cursor
            position in the editor panel.
         </option>
         <option name="Workspace">
            The pane on the right side of the editor
            panel
            is the workspace and lists the currently defined
            identifiers in the
            running Python instance. "Reset workspace"
            will remove the
            output of
            all past script executions.
         </option>
         <option name="Console">
            The console under the editor panel displays
            standard output, standard
            error, or other information.
         </option>
      </tab>
      <tab name="Options">
         <option name="Row limit (dialog)">
            Limits how many rows of input data are loaded into the dialog.
            This is useful to maintain the interactivity of script executions in the dialog when there are lots of input data.
            Changing this value only takes effect after resetting the node's workspace or closing and reopening the dialog.
         </option>
         <option name="Missing values (Integer, Long)">
            By default, <i>Number (Integer)</i> and <i>Number (Long)</i> columns containing
            missing values are
            converted into <i>double</i> in Python because
            double
            is the
            only numeric type
            that has a built-in representation for missing values (<i>NaN</i>).
            Converting longs to doubles,
            however,
            introduces imprecision. The
            conversion may be
            avoided
            by replacing
            missing values with so-called sentinel values.
            To convert missing
            values into
            sentinel values before script
            execution, check the first
            option. To convert sentinel values
            back into missing values after
            script execution, check the
            second option. Three different types of sentinel values are available:
            <i>MIN_VAL</i>
            (the smallest possible value for the
            column's
            data type),
            <i>MAX_VAL</i> (the largest possible
            value for the column's data
            type), or a custom integer value to be entered into the text field.
            The chosen sentinel value will be available as <i>INT_SENTINEL</i> and <i>LONG_SENTINEL</i> respectively,
            in the node's workspace.
         </option>
         <option name="Rows per chunk">
            Large tables are broken into chunks when
            they are transferred between
            Python and Java. This option
            controls how many rows are
            included in
            each chunk. The default
            value is intended for tables containing few
            columns having
            numeric types. If larger data types like
            images or text
            are
            transferred, a single chunk may exceed the
            maximum allowed
            buffer size. In this case lowering the value of this
            parameter helps getting reasonably sized chunks.
         </option>
      </tab>
      <tab name="Executable Selection">
         <option name="Use Python version">
            Allows to choose the Python version used to execute the node.
         </option>
         <option name="Conda environment propagation">
            Allows to choose whether to obtain the Python executable corresponding to the Python version selected
            above from the KNIME Preferences or from flow variable.
            <ul>
               <li>Use KNIME preferences: Use the Python executable configured under File → Preferences →
               KNIME → Python to execute the node.</li>
               <li>Use Conda flow variable: Use the Conda environment propagated by the selected Conda flow
               variable to execute the node. The Python version of the environment must match the version selected
               above.</li>
            </ul>
         </option>
      </tab>
      <tab name="Templates">
         <option name="Create from editor...">
            Clicking on this button creates a new template based on the
            script in the editor panel of
            the script tab.
            <br />
            Note: User defined templates can be found in the folder:
            <i>knime-workspace/.metadata/knime/sourcecode-templates/python-objectreader</i>.
         </option>
         <option name="Remove selected">
            Clicking on this button removes the selected template.
            <br />
            Note: Templates provided by plugins cannot be removed.
         </option>
         <option name="Apply selected">
            Replaces the script in the editor panel of
            the script tab with the selected template.
         </option>
      </tab>
      <tab name="Flow Variables">
         <option name="pythonVersionOption">
            Controls the <i>Use Python version</i> option above.
            The variable accepts either <i>python2</i> or <i>python3</i> as value.
         </option>
         <option name="python2Command">
            Controls which Python 2 environment is employed by this node if it is configured to use Python 2. This
            allows using an environment that is different from the one that is configured in the KNIME Preferences.
            The flow variable accepts the path to a Python start script, executable, or Conda environment as
            described in the
            <a href="https://docs.knime.com/latest/python_installation_guide/#configure_environments_per_node">
               KNIME Python Integration Installation Guide
            </a>.
         </option>
         <option name="python3Command">
            Controls which Python 3 environment is employed by this node if it is configured to use Python 3. This
            allows using an environment that is different from the one that is configured in the KNIME Preferences.
            The flow variable accepts the path to a Python start script, executable, or Conda environment as
            described in the
            <a href="https://docs.knime.com/latest/python_installation_guide/#configure_environments_per_node">
               KNIME Python Integration Installation Guide
            </a>.
         </option>
         <option name="sentinelOption">
            Controls the type of sentinel value.
            The flow variable accepts <i>MIN_VALUE</i>, <i>MAX_VALUE</i>, or <i>CUSTOM</i> as value.
            Setting this variable to <i>CUSTOM</i> makes the node respect the custom integer value
            either set in the dialog or via the <i>sentinelValue</i> flow variable.
         </option>
      </tab>
   </fullDescription>

   <ports>
      <outPort name="Object" index="0">
         The object contained in the variable <b>output_object</b> which needs to be defined by the user script.
         The object can be of any type that can be pickled.
      </outPort>
   </ports>

   <views>
      <view name="Standard output" index="0">
         The text sent by Python to the standard output during the execution of
         this node.
      </view>
      <view name="Error output" index="1">
         The text sent by Python to the error output during the execution of
         this node.
      </view>
   </views>
</knimeNode>
